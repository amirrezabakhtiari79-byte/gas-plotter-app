name: Build Android APK (Stable Docker Method)

on:
  push:
    branches:
      - main
      - master
  workflow_dispatch:

jobs:
  build-android:
    name: Build APK using official Kivy Docker image
    runs-on: ubuntu-latest

    # This line tells GitHub Actions to run all steps inside the specified container,
    # which already has all the correct dependencies and tools installed.
    container: kivy/buildozer:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set ownership of the checkout directory
        # The container runs as a 'kivy' user, so we give it permission to write files.
        run: |
          sudo chown -R kivy:kivy .
      
      - name: Configure buildozer.spec requirements
        run: |
          # This is the most critical step. It configures the buildozer.spec file
          # with all the necessary Python libraries for your app.

          # Set the log level for better debugging output
          sed -i 's/^# log_level = 2/log_level = 2/' buildozer.spec

          # Set all Python requirements, including the direct GitHub link for kivy_biometric
          sed -i "s/^requirements =.*/requirements = python3,kivy==2.1.0,kivy-garden.graph,fpdf,arabic_reshaper,python-bidi,kivy_text_provider_pango,kivy_biometric @ git+https:\/\/github.com\/kivy-garden\/kivy_biometric.git/" buildozer.spec

      - name: Build the APK with Buildozer
        run: |
          # The container is already set up to accept the SDK license automatically.
          buildozer -v android debug

      - name: Upload the APK as a workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: package-apk
          path: bin/*.apk
