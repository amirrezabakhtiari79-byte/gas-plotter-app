name: Build APK

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Get Date
        id: get-date
        run: echo "date=$(/bin/date -u '+%Y%m%d')" >> $GITHUB_OUTPUT
        shell: bash

      - name: Cache Buildozer global directory
        uses: actions/cache@v4
        with:
          path: ~/.buildozer_global
          key: buildozer-global-${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            buildozer-global-${{ runner.os }}-

      - name: Cache Buildozer directory
        uses: actions/cache@v4
        with:
          path: .buildozer
          key: ${{ runner.os }}-buildozer-${{ steps.get-date.outputs.date }}-${{ hashFiles('buildozer.spec') }}
          restore-keys: |
            ${{ runner.os }}-buildozer-${{ steps.get-date.outputs.date }}-
            ${{ runner.os }}-buildozer-

      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -f
          sudo apt-mark hold libunwind8
          sudo apt-get install -y --fix-missing --allow-downgrades --no-install-recommends \
            git zip unzip openjdk-17-jdk-headless \
            build-essential python3-dev libffi-dev libssl-dev zlib1g-dev \
            libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev \
            libncursesw5-dev xz-utils tk-dev libxml2-dev libxmlsec1-dev \
            liblzma-dev libgdbm-dev libnss3-dev libjpeg-dev libpng-dev \
            libcairo2-dev libpango1.0-dev pkg-config autoconf libtool \
            libavcodec58 libavformat58 libswscale5 libgstreamer1.0-dev libunwind-dev \
            libgstreamer-plugins-base1.0-dev libgstreamer-plugins-good1.0-dev \
            libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libsdl2-ttf-dev libportmidi-dev \
            gstreamer1.0-plugins-base gstreamer1.0-plugins-good

      - name: Install Buildozer dependencies
        run: pip install --user --upgrade cython==0.29.36 buildozer

      - name: Setup Android SDK (install cmdline-tools and accept licenses)
        run: |
          export ANDROID_HOME=/usr/local/lib/android/sdk
          mkdir -p $ANDROID_HOME/cmdline-tools
          cd $ANDROID_HOME/cmdline-tools
          # Download reliable version (11.0, from archives)
          wget -q https://dl.google.com/android/repository/commandlinetools-linux-11076708_latest.zip
          unzip -q commandlinetools-linux-11076708_latest.zip
          mv cmdline-tools latest
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          # Accept licenses
          yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses
          # Install platform-tools and API 30 (matching spec)
          $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools" "platforms;android-30"

      - name: Build APK
        run: |
          export PATH=$HOME/.local/bin:$PATH
          export ANDROID_HOME=/usr/local/lib/android/sdk
          export PATH=$ANDROID_HOME/cmdline-tools/latest/bin:$PATH
          export JAVA_HOME=/usr/lib/jvm/java-17-openjdk-amd64
          export GRADLE_OPTS="-Xmx4096m -XX:MaxMetaspaceSize=512m"
          buildozer -v android debug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk-${{ steps.get-date.outputs.date }}
          path: bin/*.apk
